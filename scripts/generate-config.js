#! /usr/bin/env node

'use strict';

const path = require('path');
const process = require('process');

const fs = require('fs-extra');
const { ESLint } = require('eslint');


/* eslint-disable @elindorath/promise/prefer-await-to-callbacks -- Required for entrypoint in node context */
(async function main() {
  const { packageDirectorySync } = await import('pkg-dir');

  const targetFile = path.resolve(__dirname, `../lib/configs.js`);
  const configFileNames = await fs.readdir(path.resolve(__dirname, `../lib/configs`));

  await fs.outputFile(
    targetFile,
    `\
/**
* DON'T EDIT THIS FILE WHICH WAS GENERATED BY '${path.relative(packageDirectorySync(__dirname), __filename)}'.
*/

'use strict';

module.exports = {
${configFileNames
    .map((fileName) => path.basename(fileName, '.js'))
    .filter((id) => !id.startsWith('_') && id !== 'plugins')
    .map((id) => `  '${id}': require('./configs/${id}'),`)
    .join('\n')}
};
`
  );

  try {
    const eslint = new ESLint({ fix: true });
    const result = await eslint.lintFiles([targetFile]);

    await ESLint.outputFixes(result);
  } catch (error) {
    console.log(error.message);
    console.log('Failed to fix lint error, try to run it again');
  }
})().catch((error) => {
  process.exitCode = 1;
  console.error(error);
});
/* eslint-enable */
